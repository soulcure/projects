package com.mykj.andr.ui;

import java.util.ArrayList;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.graphics.Paint;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.mykj.andr.model.AddGiftItem;
import com.mykj.andr.model.GoodsItem;
import com.mykj.andr.model.PromotionGoodsItem;
import com.mykj.andr.provider.AddGiftProvider;
import com.mykj.andr.provider.GoodsItemProvider;
import com.mykj.andr.provider.PromotionGoodsProvider;
import com.mykj.game.ddz.R;
import com.mykj.game.utils.UtilHelper;

/**
 * 加赠的弹出框,包括首充和推广的弹框
 * 
 * @author JianyYinZhi
 * 
 */
public class GoodsPromotionDialog extends Dialog implements
		View.OnClickListener {

	private Context mContext;

	private TextView tvTitle; // 标题
	private TextView tvLedouPrompt;// 破产送，不够乐豆进房间相关提示
	private TextView tvPricePrompt;// 价格提示
	private TextView oldCoinNum;// 加赠之前原价乐豆
	private TextView currentCoinNum;// 加赠之后的乐豆
	private TextView tvAddGiftPrompt;// 加赠道具的提示
	private TextView tvGoodName;// 商品描述

	private GridView gvAddGiftGoods; // 加赠道具列表

	private LinearLayout llCoinNum;// 乐豆折扣的布局
	private LinearLayout llAddGiftPrompt;// 加赠提示布局

	private Button btnPay;// 支付按钮
	private ImageView ivCancel;// 取消图片

	private int addGiftType = -1;// 加赠的类型 0为首充，1为其他
	private GoodsItem goodsItem = null;
	private String ledouPrompt;//提示

	private android.view.View.OnClickListener payBtnOnListener;
	private android.view.View.OnClickListener cancelBtnOnListener;

	/**
	 * 
	 * @param context
	 * @param type
	 *            0标识为首充，1标识为推广
	 */
	public GoodsPromotionDialog(Context context, int type, GoodsItem goodsItem,String prompt) {
		super(context, android.R.style.Theme_Translucent_NoTitleBar_Fullscreen);
		this.mContext = context;
		addGiftType = type;
		this.goodsItem = goodsItem;
		this.ledouPrompt = prompt;
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.goods_promption_dialog);
		init();
	}

	public void init() {
		if (goodsItem == null) {
			int goodsID = AddGiftProvider.getInstance().adviceGoodID;
			if (goodsID == 0) {
				return;
			}
			goodsItem = GoodsItemProvider.getInstance().findGoodsItemById(
					goodsID);
			if (goodsItem == null) {
				return;
			}
		}
		tvTitle = (TextView) findViewById(R.id.tv_title);
		tvLedouPrompt = (TextView) findViewById(R.id.tv_ledou_prompt);
		tvPricePrompt = (TextView) findViewById(R.id.tv_price_prompt);
		oldCoinNum = (TextView) findViewById(R.id.tv_old_coin_num);
		currentCoinNum = (TextView) findViewById(R.id.tv_current_coin_num);
		tvAddGiftPrompt = (TextView) findViewById(R.id.tv_add_gift_prompt);
		tvGoodName = (TextView) findViewById(R.id.tv_goodName);

		gvAddGiftGoods = (GridView) findViewById(R.id.gv_add_gift_goods);
		btnPay = (Button) findViewById(R.id.btn_pay);
		ivCancel = (ImageView) findViewById(R.id.iv_cancel);

		llCoinNum = (LinearLayout) findViewById(R.id.ll_coin_num);
		llAddGiftPrompt = (LinearLayout) findViewById(R.id.ll_add_gift_prompt);

		btnPay.setOnClickListener(this);
		ivCancel.setOnClickListener(this);

		// 0为首充，1为其他
		if (addGiftType == 0) {
			tvTitle.setText("充值翻倍仅此一次");
		} else if (addGiftType == 1) {
			tvTitle.setText("特惠礼包");
		}
		if (ledouPrompt != null && ledouPrompt.length() > 0) {
			tvLedouPrompt.setVisibility(View.VISIBLE);
			tvLedouPrompt.setText(ledouPrompt);
		} else {
			tvLedouPrompt.setVisibility(View.GONE);
		}
		tvPricePrompt.setText("只要" + goodsItem.pointValue / 100 + "元即可获得");
		if (AddGiftProvider.getInstance().desc == null) {
			llAddGiftPrompt.setVisibility(View.INVISIBLE);
		} else {
			llAddGiftPrompt.setVisibility(View.VISIBLE);
		}
		PromotionGoodsItem promotionGoodsItem = PromotionGoodsProvider
				.getInstance().getPromotionGoodItem(goodsItem.shopID);
		if (promotionGoodsItem.oldCoinNum == promotionGoodsItem.currentCoinNum) {
			llCoinNum.setVisibility(View.GONE);
			tvGoodName.setVisibility(View.VISIBLE);
			tvGoodName.setText(goodsItem.goodsName);
		} else {
			llCoinNum.setVisibility(View.VISIBLE);
			tvGoodName.setVisibility(View.GONE);
			oldCoinNum.setText(promotionGoodsItem.oldCoinNum + "");
			oldCoinNum.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);
			oldCoinNum.getPaint().setAntiAlias(true);
			currentCoinNum.setText(promotionGoodsItem.currentCoinNum + "");
		}
		String addGiftDesc = AddGiftProvider.getInstance().desc;
		tvAddGiftPrompt.setText(addGiftDesc);// 设置推广描述
		ArrayList<AddGiftItem> addGiftItems = AddGiftProvider.getInstance().addGiftItems;
		int gridSize = addGiftItems.size();
		if (gridSize <= 0) {
			return;
		}
		gvAddGiftGoods.setNumColumns(gridSize);
		// 设置gridview的宽度
		ViewGroup.LayoutParams params = gvAddGiftGoods.getLayoutParams();
		BitmapDrawable mBitmap = (BitmapDrawable) mContext.getResources()
				.getDrawable(R.drawable.promotion_goods_gift_frame);
		float density = UtilHelper.getDensity(mContext);
		int mWidth = (int) (mBitmap.getBitmap().getWidth() * density);
		gvAddGiftGoods.setColumnWidth(mWidth + mWidth / 5);
		gvAddGiftGoods.setHorizontalSpacing(mWidth / 10);
		params.width = mWidth * addGiftItems.size() + mWidth
				* (addGiftItems.size() - 1) / 10;
		gvAddGiftGoods.setLayoutParams(params);
		AddGiftfAdapter mAdapter = new AddGiftfAdapter(mContext, addGiftItems);
		gvAddGiftGoods.setAdapter(mAdapter);
	}

	@Override
	public void onClick(View arg0) {
		switch (arg0.getId()) {
		case R.id.btn_pay:
			if (payBtnOnListener != null) {
				payBtnOnListener.onClick(arg0);
				dismiss();
			}
			break;
		case R.id.iv_cancel:
			if(cancelBtnOnListener!=null){
				cancelBtnOnListener.onClick(arg0);
			}
			dismiss();
			break;
		default:
			break;
		}
	}

	public void setOnPayListener(
			android.view.View.OnClickListener onClickListener) {
		payBtnOnListener = onClickListener;
	}

	public void setOnCancelListener(
			android.view.View.OnClickListener onClickListener) {
		cancelBtnOnListener = onClickListener;
	}

	public class AddGiftfAdapter extends BaseAdapter {

		private LayoutInflater inflater;
		private ArrayList<AddGiftItem> addGiftItems;
		private Context mContext;

		public AddGiftfAdapter(Context context,
				ArrayList<AddGiftItem> addGiftItems) {
			this.inflater = LayoutInflater.from(context);
			this.addGiftItems = addGiftItems;
			mContext = context;
		}

		@Override
		public int getCount() {
			return addGiftItems.size();
		}

		@Override
		public Object getItem(int position) {
			return addGiftItems.get(position);
		}

		@Override
		public long getItemId(int position) {
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			ViewHolder holder;
			if (convertView == null) {
				holder = new ViewHolder();
				convertView = AddGiftfAdapter.this.inflater.inflate(
						R.layout.add_gift_goods_item, null);
				holder.iv = (ImageView) convertView.findViewById(R.id.iv_goods);
				holder.tv = (TextView) convertView
						.findViewById(R.id.tv_goods_name);
				convertView.setTag(holder);
			} else {
				holder = (ViewHolder) convertView.getTag();
			}
			AddGiftItem item = addGiftItems.get(position);
			item.getAddGiftIcon(mContext, holder.iv);
			holder.tv.setText(item.name + "Ｘ" + item.count);
			return convertView;
		}

		private class ViewHolder {
			ImageView iv;
			TextView tv;
		}
	}

	public TextView getTVLedou() {
		return tvLedouPrompt;
	}

}
